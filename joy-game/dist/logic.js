const o=t=>Object.values(t.diceCount).some(e=>e<=0),a=t=>Object.entries(t.diceCount).reduce((e,[n,r])=>{const i=r<=0?"WON":"LOST";return e[n]=i,e},{});Rune.initLogic({minPlayers:1,maxPlayers:4,setup:t=>{const e=Object.fromEntries(t.map(r=>[r,5]));return{gameDice:Array.from({length:5},()=>Math.floor(Math.random()*6)+1),diceCount:e,currentPlayerIndex:0,playerToRoll:!0,gameOver:!1}},actions:{updateDiceCount:({playerId:t,amount:e},{game:n})=>{if(n.diceCount[t]===void 0)throw Rune.invalidAction();n.diceCount[t]+=e,o(n)&&Rune.gameOver({players:a(n)})},rollDice:({numDice:t},{game:e})=>{e.gameDice=Array.from({length:t},()=>Math.floor(Math.random()*6)+1)},nextPlayer:({nextIndex:t},{game:e})=>{e.gameOver||(e.currentPlayerIndex=t)}},events:{playerJoined:(t,{game:e})=>{e.diceCount[t]=5},playerLeft(t,{game:e}){delete e.diceCount[t]}}});
